#!/usr/bin/env node

'use strict';

/**
 * module dependencies
 */
global.Promise = require('bluebird');
const co = require('co');
const request = require('../lib/patch').superagent;
const _ = require('lodash');
const minimist = require('minimist');
const HuabanBoard = require('../lib');

/**
 * args
 */
const argv = minimist(process.argv.slice(2), {
  boolean: ['help'],
  alias: {
    c: ['concurrency'],
    h: ['help']
  },
  defaults: {
    concurrency: 10
  }
});

const exampleUrl = 'http://huaban.com/boards/17324249/';
if (process.argv.length === 2 || argv.help) {
  console.log(`
  huaban board downloader

    Usage:
      iojs huaban.js <board-url> [options]

    Options:
      -c,--concurrency    ->    同时最大下载数量,默认10
      -h,--help           ->    输出此帮助信息

    Example:
      iojs huaban.js ${ exampleUrl } -c 10
  `);
  process.exit();
}

// 并发
const concurrency = argv.concurrency;

co(function*() {
  const url = argv._[0];
  const concurrency = argv.concurrency;
  const start = Date.now();

  // download
  const board = new HuabanBoard(url);
  yield board.initAsync();

  // title & name
  console.log(`花瓣画板: [${ board.title }], 共 ${ board.pins.length } 张图片`);
  yield board.downloadBoardAsync();

  // end
  const end = Date.now();
  console.log('耗时 %s 秒', (end - start) / 1000);
}).catch(e => console.error(e.stack || e));